{"version":3,"sources":["util/client.ts","operation/swap/fixedInput.ts","operation/swap/fixedInputSwap.ts","operation/swap/fixedOutput.ts","components/Swap.tsx","components/CardSwap.js","components/_external-pages/swap/Swap.js","pages/Swap.js","components/Page.js"],"names":["console","log","algodClient","algosdk","Algodv2","fixedInput","a","asset_1","asset_2","amount","assetInDecimal","assetOutDecimal","poolUtils","v2","getPoolInfo","network","client","asset1ID","Number","asset2ID","pool","fixedOutputSwapQuote","Swap","getQuote","SwapType","FixedInput","id","assetIn","assetOut","assetOutAmount","FixedOutput","assetInAmount","fixedInputSwapQuote","assetInID","assetOutID","fixedInputSwap","account","perawallet","setMessage","initiatorAddr","generateTxns","swapType","slippage","fixedInputSwapTxns","signTransaction","signedTxns","execute","txGroup","swapExecutionResponse","txnID","fixedOutput","tokenlist","tokenNumber","useStyles","makeStyles","theme","root","flexGrow","avatar","backgroundColor","blue","color","label","padding","spacing","assets","assetInput","textAlign","fontSize","width","background","border","marginTop","smallIcon","paddingTop","connectButton","props","pera","address","classes","setAddress","themeMode","useSettings","useState","openAsset1","setOpenAsset1","openAsset2","setOpenAsset2","selectedAsset1TokenName","setSelectedAsset1TokenName","selectedAsset1TokenNumber","setSelectedAsset1TokenNumber","selectedAsset1TokenUnitName","setSelectedAsset1TokenUnitName","selectedAsset1TokenDecimal","setSelectedAsset1TokenDecimal","selectedAsset2TokenName","setSelectedAsset2TokenName","selectedAsset2TokenNumber","setSelectedAsset2TokenNumber","selectedAsset2TokenUnitName","setSelectedAsset2TokenUnitName","selectedAsset2TokenDecimal","setSelectedAsset2TokenDecimal","assetAmount1","setAssetAmount1","assetAmount2","setAssetAmount2","message","setPerawallet","setAccountAddress","handleSwap","length","undefined","useEffect","asset1HandleClose","name","num","unit","decimal","swap","asset2HandleClose","handleAsset1AmountChange","event","target","value","asset2Amount","toString","handleAsset2AmountChange","asset1Amount","className","Grid","container","item","xs","MenuItem","sx","typography","py","px","onClick","Box","display","alignItems","justifyContent","component","src","alt","mr","height","gap","Typography","variant","noWrap","Tooltip","title","arrow","SelectTokenDialog","selectedAssetTokenName","selectedAssetTokenNumber","selectedAssetTokenUnitName","selectedAssetTokenDecimal","open","onClose","type","pattern","placeholder","onChange","style","IconButton","aria-label","Button","md","fontFamily","fontWeight","borderRadius","boxShadow","opacity","Account","balanceList","setBalanceList","handleAssets","Promise","all","map","getAssetByID","assetInfo","params","asset","newArr","Dialog","aria-labelledby","DialogTitle","DialogContent","List","decimals","flexDirection","ml","marginBottom","media","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","red","CardSwap","Card","RootStyle","styled","Container","maxWidth","position","textTransform","lineHeight","paddingBottom","margin","alignContent","Page","backgroundPosition","backgroundRepeat","ContentStyle","overflow","SwapPage","forwardRef","ref","children","other","propTypes","PropTypes","node","isRequired","string"],"mappings":"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","file":"static/js/19.813722c8.chunk.js","sourcesContent":["import algosdk from 'algosdk';\r\n\r\nconsole.log(\r\n  'ℹ️  The examples uses the testnet AlgoExplorer API for testing purposes. You can change it in `client.ts` file.\\n'\r\n);\r\nexport const algodClient = new algosdk.Algodv2('', 'https://node.algoexplorerapi.io/', '');\r\n","import { poolUtils, SupportedNetwork, Swap, SwapType } from '@tinymanorg/tinyman-js-sdk';\r\nimport { Account } from 'algosdk';\r\n\r\nimport { algodClient } from '../../util/client';\r\nimport signerWithSecretKey from '../../util/initiatorSigner';\r\n\r\n/**\r\n * Executes a swap with a fixed input amount\r\n * (Input amount is entered by the user, output amount is to be calculated by the SDK)\r\n */\r\nexport async function fixedInput({\r\n  asset_1,\r\n  asset_2,\r\n  amount,\r\n  assetInDecimal,\r\n  assetOutDecimal\r\n}: {\r\n  asset_1: number;\r\n  asset_2: number;\r\n  amount: string;\r\n  assetInDecimal: number;\r\n  assetOutDecimal: number;\r\n}) {\r\n  const pool = await poolUtils.v2.getPoolInfo({\r\n    network: 'mainnet' as SupportedNetwork,\r\n    client: algodClient,\r\n    asset1ID: Number(asset_1),\r\n    asset2ID: Number(asset_2)\r\n  });\r\n\r\n  console.log(pool);\r\n\r\n  /**\r\n   * This example uses only v2 quote. Similarly, we can use\r\n   * Swap.getQuote method, which will return the best quote (highest rate)\r\n   * after checking both v1 and v2\r\n   */\r\n\r\n  console.log(asset_1);\r\n  console.log(asset_2);\r\n  console.log(assetInDecimal);\r\n  console.log(assetOutDecimal);\r\n\r\n  if (asset_1 === 0) {\r\n    const fixedOutputSwapQuote = Swap.v2.getQuote(\r\n      SwapType.FixedInput,\r\n      pool,\r\n      { id: pool.asset2ID, amount: Number(amount) * 10 ** assetInDecimal },\r\n      { assetIn: assetInDecimal, assetOut: assetOutDecimal }\r\n    );\r\n    console.log(asset_1);\r\n    return fixedOutputSwapQuote.assetOutAmount;\r\n  }\r\n\r\n  if (asset_2 === 0) {\r\n    const fixedOutputSwapQuote = Swap.v2.getQuote(\r\n      SwapType.FixedOutput,\r\n      pool,\r\n      { id: pool.asset1ID, amount: Number(amount) * 10 ** assetInDecimal },\r\n      { assetIn: assetInDecimal, assetOut: assetOutDecimal }\r\n    );\r\n    console.log(asset_2);\r\n    return fixedOutputSwapQuote.assetInAmount;\r\n  }\r\n\r\n  console.log(`assetInDecimal: ${assetInDecimal}`);\r\n  console.log(`assetOutDecimal: ${assetOutDecimal}`);\r\n  console.log(`asset_1: ${asset_1}`);\r\n  console.log(`asset_2: ${asset_2}`);\r\n  console.log(`pool.asset1ID: ${pool.asset1ID}`);\r\n  console.log(`amount: ${amount}`);\r\n\r\n  if (asset_1 === pool.asset1ID) {\r\n    const fixedInputSwapQuote = Swap.v2.getQuote(\r\n      SwapType.FixedInput,\r\n      pool,\r\n      { id: pool.asset1ID, amount: Number(amount) * 10 ** assetInDecimal },\r\n      { assetIn: assetInDecimal, assetOut: assetOutDecimal }\r\n    );\r\n    const assetIn = {\r\n      id: fixedInputSwapQuote.assetInID,\r\n      amount: fixedInputSwapQuote.assetInAmount\r\n    };\r\n    const assetOut = {\r\n      id: fixedInputSwapQuote.assetOutID,\r\n      amount: fixedInputSwapQuote.assetOutAmount\r\n    };\r\n\r\n    return assetOut.amount;\r\n  }\r\n  const fixedOutputSwapQuote = Swap.v2.getQuote(\r\n    SwapType.FixedOutput,\r\n    pool,\r\n    { id: pool.asset2ID, amount: Number(amount) * 10 ** assetInDecimal },\r\n    { assetIn: assetOutDecimal, assetOut: assetInDecimal }\r\n  );\r\n\r\n  const assetIn = {\r\n    id: fixedOutputSwapQuote.assetInID,\r\n    amount: fixedOutputSwapQuote.assetInAmount\r\n  };\r\n  const assetOut = {\r\n    id: fixedOutputSwapQuote.assetOutID,\r\n    amount: fixedOutputSwapQuote.assetOutAmount\r\n  };\r\n\r\n  console.log(`assetIn.amount: ${assetIn.amount}`);\r\n  console.log(`assetOut.amount: ${assetOut.amount}`);\r\n\r\n  return assetIn.amount;\r\n\r\n  // const fixedInputSwapTxns = await Swap.v2.generateTxns({\r\n  //   client: algodClient,\r\n  //   swapType: SwapType.FixedInput,\r\n  //   pool,\r\n  //   initiatorAddr,\r\n  //   assetIn,\r\n  //   assetOut,\r\n  //   slippage: 0.05\r\n  // });\r\n\r\n  // const signedTxns = await Swap.v2.signTxns({\r\n  //   txGroup: fixedInputSwapTxns,\r\n  //   initiatorSigner: signerWithSecretKey(account)\r\n  // });\r\n\r\n  // const swapExecutionResponse = await Swap.v2.execute({\r\n  //   network: 'testnet' as SupportedNetwork,\r\n  //   client: algodClient,\r\n  //   signedTxns,\r\n  //   pool,\r\n  //   txGroup: fixedInputSwapTxns,\r\n  //   assetIn\r\n  // });\r\n\r\n  console.log('✅ Fixed Input Swap executed successfully!');\r\n  // console.log({ txnID: swapExecutionResponse.txnID });\r\n}\r\n","import { poolUtils, SupportedNetwork, Swap, SwapType } from '@tinymanorg/tinyman-js-sdk';\r\nimport { Account } from 'algosdk';\r\nimport { PeraWalletConnect } from '@perawallet/connect';\r\nimport { algodClient } from '../../util/client';\r\n// import signerWithPera from '../../util/initiatorSigner';\r\n// import signerWithPera from '../../util/perawalletInitiatorSigner';\r\n\r\n/**\r\n * Executes a swap with a fixed input amount\r\n * (Input amount is entered by the user, output amount is to be calculated by the SDK)\r\n */\r\nexport async function fixedInputSwap({\r\n  asset_1,\r\n  asset_2,\r\n  amount,\r\n  assetInDecimal,\r\n  assetOutDecimal,\r\n  account,\r\n  perawallet,\r\n  setMessage\r\n}: {\r\n  asset_1: number;\r\n  asset_2: number;\r\n  amount: string;\r\n  assetInDecimal: number;\r\n  assetOutDecimal: number;\r\n  account: string;\r\n  perawallet: PeraWalletConnect;\r\n  setMessage: any;\r\n}) {\r\n  const initiatorAddr = account;\r\n  const pool = await poolUtils.v2.getPoolInfo({\r\n    network: 'mainnet' as SupportedNetwork,\r\n    client: algodClient,\r\n    asset1ID: Number(asset_1),\r\n    asset2ID: Number(asset_2)\r\n  });\r\n\r\n  /**\r\n   * This example uses only v2 quote. Similarly, we can use\r\n   * Swap.getQuote method, which will return the best quote (highest rate)\r\n   * after checking both v1 and v2\r\n   */\r\n  const fixedInputSwapQuote = Swap.v2.getQuote(\r\n    SwapType.FixedInput,\r\n    pool,\r\n    { id: pool.asset1ID, amount: Number(amount) * 10 ** assetInDecimal },\r\n    { assetIn: assetInDecimal, assetOut: assetOutDecimal }\r\n  );\r\n\r\n  let assetIn = {\r\n    id: fixedInputSwapQuote.assetInID,\r\n    amount: fixedInputSwapQuote.assetInAmount\r\n  };\r\n  let assetOut = {\r\n    id: fixedInputSwapQuote.assetOutID,\r\n    amount: fixedInputSwapQuote.assetOutAmount\r\n  };\r\n\r\n  if (asset_1 === 0) {\r\n    const fixedInputSwapQuote = Swap.v2.getQuote(\r\n      SwapType.FixedInput,\r\n      pool,\r\n      { id: pool.asset2ID, amount: Number(amount) * 10 ** assetInDecimal },\r\n      { assetIn: assetInDecimal, assetOut: assetOutDecimal }\r\n    );\r\n    assetIn = {\r\n      id: fixedInputSwapQuote.assetInID,\r\n      amount: fixedInputSwapQuote.assetInAmount\r\n    };\r\n    assetOut = {\r\n      id: fixedInputSwapQuote.assetOutID,\r\n      amount: fixedInputSwapQuote.assetOutAmount\r\n    };\r\n    console.log(assetIn);\r\n    console.log(assetOut);\r\n  }\r\n\r\n  let fixedInputSwapTxns = await Swap.v2.generateTxns({\r\n    client: algodClient,\r\n    swapType: SwapType.FixedInput,\r\n    pool,\r\n    initiatorAddr,\r\n    assetIn,\r\n    assetOut,\r\n    slippage: 0.05\r\n  });\r\n\r\n  if (asset_2 === 0) {\r\n    const fixedInputSwapQuote = Swap.v2.getQuote(\r\n      SwapType.FixedOutput,\r\n      pool,\r\n      { id: pool.asset1ID, amount: Number(amount) * 10 ** assetInDecimal },\r\n      { assetIn: assetInDecimal, assetOut: assetOutDecimal }\r\n    );\r\n    assetOut = {\r\n      id: fixedInputSwapQuote.assetInID,\r\n      amount: fixedInputSwapQuote.assetInAmount\r\n    };\r\n    assetIn = {\r\n      id: fixedInputSwapQuote.assetOutID,\r\n      amount: fixedInputSwapQuote.assetOutAmount\r\n    };\r\n\r\n    console.log(assetIn);\r\n    console.log(assetOut);\r\n\r\n    fixedInputSwapTxns = await Swap.v2.generateTxns({\r\n      client: algodClient,\r\n      swapType: SwapType.FixedInput,\r\n      pool,\r\n      initiatorAddr,\r\n      assetIn,\r\n      assetOut,\r\n      slippage: 0.05\r\n    });\r\n  }\r\n\r\n  if (asset_1 !== pool.asset1ID && asset_1 !== 0 && asset_2 !== 0) {\r\n    console.log(pool.asset1ID);\r\n    console.log(pool.asset2ID);\r\n    console.log(assetOutDecimal);\r\n    console.log(assetInDecimal);\r\n    console.log(amount);\r\n\r\n    const fixedOutputSwapQuote = Swap.v2.getQuote(\r\n      SwapType.FixedOutput,\r\n      pool,\r\n      { id: pool.asset2ID, amount: Number(amount) * 10 ** assetInDecimal },\r\n      { assetIn: assetOutDecimal, assetOut: assetInDecimal }\r\n    );\r\n\r\n    assetIn = {\r\n      id: fixedOutputSwapQuote.assetInID,\r\n      amount: fixedOutputSwapQuote.assetInAmount\r\n    };\r\n    assetOut = {\r\n      id: fixedOutputSwapQuote.assetOutID,\r\n      amount: fixedOutputSwapQuote.assetOutAmount\r\n    };\r\n\r\n    fixedInputSwapTxns = await Swap.v2.generateTxns({\r\n      client: algodClient,\r\n      swapType: SwapType.FixedOutput,\r\n      pool,\r\n      initiatorAddr,\r\n      assetIn,\r\n      assetOut,\r\n      slippage: 0.05\r\n    });\r\n\r\n    console.log(fixedInputSwapTxns);\r\n  }\r\n\r\n  console.log(`assetIn.amount: ${assetIn.amount}`);\r\n  console.log(`assetOut.amount: ${assetOut.amount}`);\r\n\r\n  console.log(fixedInputSwapTxns);\r\n\r\n  const signedTxns = await perawallet.signTransaction([fixedInputSwapTxns]);\r\n\r\n  console.log(signedTxns);\r\n  // const signedTxns = await Swap.v2.signTxns({\r\n  //   txGroup: fixedInputSwapTxns,\r\n  //   initiatorSigner: signerWithPera(account, perawallet)\r\n  // });\r\n\r\n  try {\r\n    const swapExecutionResponse = await Swap.v2.execute({\r\n      network: 'mainnet' as SupportedNetwork,\r\n      client: algodClient,\r\n      signedTxns,\r\n      pool,\r\n      txGroup: fixedInputSwapTxns,\r\n      assetIn\r\n    });\r\n    console.log('✅ Fixed Input Swap executed successfully!');\r\n    console.log({ txnID: swapExecutionResponse.txnID });\r\n    setMessage('✅ Fixed Input Swap executed successfully!');\r\n\r\n    return '✅ Fixed Input Swap executed successfully!';\r\n  } catch (e) {\r\n    console.log(e);\r\n    setMessage('Swap failed');\r\n    return 'Swap failed!';\r\n  }\r\n}\r\n","import { poolUtils, SupportedNetwork, Swap, SwapType } from '@tinymanorg/tinyman-js-sdk';\r\nimport { algodClient } from '../../util/client';\r\n\r\n/**\r\n * Executes a swap with a fixed output amount\r\n * (Output amount is entered by the user, input amount is to be calculated by the SDK)\r\n */\r\nexport async function fixedOutput({\r\n  asset_1,\r\n  asset_2,\r\n  amount,\r\n  assetInDecimal,\r\n  assetOutDecimal\r\n}: {\r\n  asset_1: number;\r\n  asset_2: number;\r\n  amount: string;\r\n  assetInDecimal: number;\r\n  assetOutDecimal: number;\r\n}) {\r\n  const pool = await poolUtils.v2.getPoolInfo({\r\n    network: 'mainnet' as SupportedNetwork,\r\n    client: algodClient,\r\n    asset1ID: Number(asset_1),\r\n    asset2ID: Number(asset_2)\r\n  });\r\n\r\n  /**\r\n   * This example uses only v2 quote. Similarly, we can use\r\n   * Swap.getQuote method, which will return the best quote (highest rate)\r\n   * after checking both v1 and v2\r\n   */\r\n  if (asset_2 === 0) {\r\n    const fixedOutputSwapQuote = Swap.v2.getQuote(\r\n      SwapType.FixedOutput,\r\n      pool,\r\n      { id: pool.asset2ID, amount: Number(amount) * 10 ** assetOutDecimal },\r\n      { assetIn: assetInDecimal, assetOut: assetOutDecimal }\r\n    );\r\n    return fixedOutputSwapQuote.assetInAmount;\r\n  }\r\n\r\n  if (asset_1 === 0) {\r\n    const fixedOutputSwapQuote = Swap.v2.getQuote(\r\n      SwapType.FixedOutput,\r\n      pool,\r\n      { id: pool.asset1ID, amount: Number(amount) * 10 ** assetOutDecimal },\r\n      { assetIn: assetInDecimal, assetOut: assetOutDecimal }\r\n    );\r\n    return fixedOutputSwapQuote.assetInAmount;\r\n  }\r\n\r\n  console.log(`assetInDecimal: ${assetInDecimal}`);\r\n  console.log(`assetOutDecimal: ${assetOutDecimal}`);\r\n  console.log(`asset_1: ${asset_1}`);\r\n  console.log(`asset_2: ${asset_2}`);\r\n\r\n  if (asset_1 === pool.asset1ID) {\r\n    const fixedOutputSwapQuote = Swap.v2.getQuote(\r\n      SwapType.FixedOutput,\r\n      pool,\r\n      { id: pool.asset2ID, amount: Number(amount) * 10 ** assetOutDecimal },\r\n      { assetIn: assetInDecimal, assetOut: assetOutDecimal }\r\n    );\r\n\r\n    const assetIn = {\r\n      id: fixedOutputSwapQuote.assetInID,\r\n      amount: fixedOutputSwapQuote.assetInAmount\r\n    };\r\n    const assetOut = {\r\n      id: fixedOutputSwapQuote.assetOutID,\r\n      amount: fixedOutputSwapQuote.assetOutAmount\r\n    };\r\n    return assetIn.amount;\r\n  }\r\n\r\n  const fixedInputSwapQuote = Swap.v2.getQuote(\r\n    SwapType.FixedInput,\r\n    pool,\r\n    { id: pool.asset1ID, amount: Number(amount) * 10 ** assetOutDecimal },\r\n    { assetIn: assetOutDecimal, assetOut: assetInDecimal }\r\n  );\r\n  const assetIn = {\r\n    id: fixedInputSwapQuote.assetInID,\r\n    amount: fixedInputSwapQuote.assetInAmount\r\n  };\r\n  const assetOut = {\r\n    id: fixedInputSwapQuote.assetOutID,\r\n    amount: fixedInputSwapQuote.assetOutAmount\r\n  };\r\n\r\n  console.log(assetIn.amount);\r\n  console.log(assetOut.amount);\r\n\r\n  return assetOut.amount;\r\n\r\n  console.log('✅ Fixed Output Swap executed successfully!');\r\n}\r\n","import { useState, useEffect, ChangeEvent, MouseEvent } from 'react';\r\nimport { PeraWalletConnect } from '@perawallet/connect';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport List from '@material-ui/core/List';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport { Box, Typography, MenuItem, Tooltip } from '@material-ui/core';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport SwapVertIcon from '@material-ui/icons/SwapVert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport useSettings from '../hooks/useSettings';\r\nimport { fixedInput } from '../operation/swap/fixedInput';\r\nimport { fixedInputSwap } from '../operation/swap/fixedInputSwap';\r\nimport { fixedOutput } from '../operation/swap/fixedOutput';\r\nimport { getAssetByID } from '../utils/accountUtils';\r\nimport TokenTemplate from './Swap/TokenTemplate';\r\nimport Account from './Account';\r\n\r\nconst tokenlist = [\r\n  {\r\n    tokenNumber: 0\r\n  },\r\n  {\r\n    tokenNumber: 31566704\r\n  },\r\n  {\r\n    tokenNumber: 388592191\r\n  },\r\n  {\r\n    tokenNumber: 793124631\r\n  },\r\n  {\r\n    tokenNumber: 571576867\r\n  },\r\n  {\r\n    tokenNumber: 226701642\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  avatar: {\r\n    backgroundColor: blue[100],\r\n    color: blue[600]\r\n  },\r\n  label: {\r\n    padding: theme.spacing(3)\r\n  },\r\n  assets: {\r\n    padding: theme.spacing(1)\r\n  },\r\n  assetInput: {\r\n    textAlign: 'right',\r\n    fontSize: '20px',\r\n    width: '200px',\r\n    padding: '10px',\r\n    background: 'none',\r\n    border: 'none',\r\n    marginTop: '6px'\r\n  },\r\n  smallIcon: {\r\n    textAlign: 'center',\r\n    paddingTop: '0px'\r\n  },\r\n  connectButton: {\r\n    marginTop: '30px'\r\n  }\r\n}));\r\n\r\nexport default function Swap(props: { pera: PeraWalletConnect; address: string; setAddress: any }) {\r\n  const { pera, address, setAddress } = props;\r\n  const classes = useStyles();\r\n  const { themeMode } = useSettings();\r\n  const [openAsset1, setOpenAsset1] = useState(false);\r\n  const [openAsset2, setOpenAsset2] = useState(false);\r\n\r\n  const [selectedAsset1TokenName, setSelectedAsset1TokenName] = useState('Algorand');\r\n  const [selectedAsset1TokenNumber, setSelectedAsset1TokenNumber] = useState(tokenlist[0].tokenNumber);\r\n  const [selectedAsset1TokenUnitName, setSelectedAsset1TokenUnitName] = useState('ALGO');\r\n  const [selectedAsset1TokenDecimal, setSelectedAsset1TokenDecimal] = useState(6);\r\n\r\n  const [selectedAsset2TokenName, setSelectedAsset2TokenName] = useState('USDC');\r\n  const [selectedAsset2TokenNumber, setSelectedAsset2TokenNumber] = useState(tokenlist[1].tokenNumber);\r\n  const [selectedAsset2TokenUnitName, setSelectedAsset2TokenUnitName] = useState('USDC');\r\n  const [selectedAsset2TokenDecimal, setSelectedAsset2TokenDecimal] = useState(6);\r\n\r\n  const [assetAmount1, setAssetAmount1] = useState('');\r\n  const [assetAmount2, setAssetAmount2] = useState('');\r\n\r\n  const [message, setMessage] = useState('');\r\n\r\n  // const [accountAddress, setAccountAddress] = useState('');\r\n  // const pera = new PeraWalletConnect();\r\n\r\n  const [perawallet, setPerawallet] = useState<PeraWalletConnect>(pera);\r\n\r\n  const [accountAddress, setAccountAddress] = useState<string | null>(null);\r\n  //   const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleClickOpenAsset1 = () => {\r\n    setOpenAsset1(true);\r\n  };\r\n\r\n  const handleClickOpenAsset2 = () => {\r\n    setOpenAsset2(true);\r\n  };\r\n\r\n  const handleClickExchange = () => {\r\n    asset1HandleClose(\r\n      selectedAsset2TokenName,\r\n      selectedAsset2TokenNumber,\r\n      selectedAsset2TokenUnitName,\r\n      selectedAsset2TokenDecimal,\r\n      true\r\n    );\r\n    asset2HandleClose(\r\n      selectedAsset1TokenName,\r\n      selectedAsset1TokenNumber,\r\n      selectedAsset1TokenUnitName,\r\n      selectedAsset1TokenDecimal,\r\n      true\r\n    );\r\n    console.log(selectedAsset1TokenDecimal);\r\n    console.log(selectedAsset2TokenDecimal);\r\n    console.log(selectedAsset1TokenNumber);\r\n    console.log(selectedAsset2TokenNumber);\r\n  };\r\n\r\n  const handleSwap = async () => {\r\n    if (address && address.length > 0 && perawallet !== undefined) {\r\n      console.log(address);\r\n      fixedInputSwap({\r\n        asset_1: selectedAsset1TokenNumber,\r\n        asset_2: selectedAsset2TokenNumber,\r\n        amount: assetAmount1,\r\n        assetInDecimal: selectedAsset1TokenDecimal,\r\n        assetOutDecimal: selectedAsset2TokenDecimal,\r\n        account: address,\r\n        perawallet,\r\n        setMessage\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(address);\r\n  }, [message, address]);\r\n\r\n  const asset1HandleClose = (name: string, num: number, unit: string, decimal: number, swap: boolean) => {\r\n    if (num !== selectedAsset2TokenNumber || swap === true) {\r\n      setOpenAsset1(false);\r\n      setSelectedAsset1TokenNumber(num);\r\n      if (num === 0) {\r\n        setSelectedAsset1TokenDecimal(6);\r\n        setSelectedAsset1TokenName('Algorand');\r\n        setSelectedAsset1TokenUnitName('ALGO');\r\n      } else {\r\n        setSelectedAsset1TokenDecimal(decimal);\r\n        setSelectedAsset1TokenName(name);\r\n        setSelectedAsset1TokenUnitName(unit);\r\n      }\r\n      setAssetAmount1('0');\r\n      setAssetAmount2('0');\r\n    }\r\n  };\r\n\r\n  const asset2HandleClose = (name: string, num: number, unit: string, decimal: number, swap: boolean) => {\r\n    if (num !== selectedAsset1TokenNumber || swap === true) {\r\n      setOpenAsset2(false);\r\n      setSelectedAsset2TokenName(name);\r\n      setSelectedAsset2TokenNumber(num);\r\n      setSelectedAsset2TokenUnitName(unit);\r\n      if (num === 0) {\r\n        setSelectedAsset2TokenDecimal(6);\r\n        setSelectedAsset2TokenName('Algorand');\r\n      } else {\r\n        setSelectedAsset2TokenDecimal(decimal);\r\n        setSelectedAsset2TokenName(name);\r\n      }\r\n      setAssetAmount1('0');\r\n      setAssetAmount2('0');\r\n    }\r\n  };\r\n\r\n  const handleAsset1AmountChange = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    console.log(selectedAsset1TokenNumber);\r\n    setAssetAmount1(event.target.value);\r\n    const asset2Amount: bigint = await fixedInput({\r\n      asset_1: selectedAsset1TokenNumber,\r\n      asset_2: selectedAsset2TokenNumber,\r\n      amount: event.target.value,\r\n      assetInDecimal: selectedAsset1TokenDecimal,\r\n      assetOutDecimal: selectedAsset2TokenDecimal\r\n    });\r\n    setAssetAmount2((Number(asset2Amount) / 10 ** selectedAsset2TokenDecimal).toString());\r\n  };\r\n\r\n  const handleAsset2AmountChange = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setAssetAmount2(event.target.value);\r\n    const asset1Amount: bigint = await fixedOutput({\r\n      asset_1: selectedAsset1TokenNumber,\r\n      asset_2: selectedAsset2TokenNumber,\r\n      amount: event.target.value,\r\n      assetInDecimal: selectedAsset1TokenDecimal,\r\n      assetOutDecimal: selectedAsset2TokenDecimal\r\n    });\r\n    setAssetAmount1((Number(asset1Amount) / 10 ** selectedAsset1TokenDecimal).toString());\r\n  };\r\n\r\n  //   const isConnectedToPeraWallet = !!accountAddress;\r\n  //   const handleInputChange = async (event: ChangeEvent<HTMLInputElement>) => {\r\n  //     setInputValue(event.target.value);\r\n  //     console.log(event.target.value);\r\n  //     const account: string = accountAddress as string;\r\n  //     const asset1 = '0';\r\n  //     const asset2 = '523683256';\r\n  //     // await fixedInputSwap({ account, asset_1: asset1, asset_2: asset2 });\r\n  //   };\r\n\r\n  //   const handleClick = (event: MouseEvent) => {\r\n  //     console.log('Submit button clicked!');\r\n  //   };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container className={classes.label}>\r\n        <Grid item xs>\r\n          From\r\n        </Grid>\r\n      </Grid>\r\n      {/* Asset1 */}\r\n      <Grid container className={classes.assets}>\r\n        <Grid item xs>\r\n          <MenuItem sx={{ typography: 'body2', py: 1, px: 2.5 }} onClick={handleClickOpenAsset1}>\r\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" flexGrow={1}>\r\n              <Box display=\"flex\" alignItems=\"center\">\r\n                <Box\r\n                  component=\"img\"\r\n                  src={`https://asa-list.tinyman.org/assets/${selectedAsset1TokenNumber}/icon.png`}\r\n                  alt=\"Asset logo\"\r\n                  sx={{\r\n                    mr: 2,\r\n                    width: 40,\r\n                    height: 40\r\n                  }}\r\n                />\r\n                <Box>\r\n                  <Box display=\"flex\" alignItems=\"center\" gap={1}>\r\n                    <Typography variant=\"subtitle1\" noWrap>\r\n                      {selectedAsset1TokenName}\r\n                    </Typography>\r\n                    <Tooltip title=\"Trusted asset by Pera\" arrow>\r\n                      <Box\r\n                        component=\"img\"\r\n                        src=\"/static/token/trust.svg\"\r\n                        alt=\"Asset logo\"\r\n                        sx={{\r\n                          width: 16,\r\n                          height: 16\r\n                        }}\r\n                      />\r\n                    </Tooltip>\r\n                  </Box>\r\n                  <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\r\n                    ${selectedAsset1TokenUnitName} - {selectedAsset1TokenNumber}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          </MenuItem>\r\n          <SelectTokenDialog\r\n            selectedAssetTokenName={selectedAsset1TokenName}\r\n            selectedAssetTokenNumber={selectedAsset1TokenNumber}\r\n            selectedAssetTokenUnitName={selectedAsset1TokenUnitName}\r\n            selectedAssetTokenDecimal={selectedAsset1TokenDecimal}\r\n            open={openAsset1}\r\n            onClose={asset1HandleClose}\r\n          />\r\n        </Grid>\r\n        <Grid item xs>\r\n          <input\r\n            type=\"number\"\r\n            pattern=\"[0-9]*\"\r\n            className={classes.assetInput}\r\n            placeholder=\"0.00\"\r\n            value={assetAmount1}\r\n            onChange={handleAsset1AmountChange}\r\n            style={{ color: themeMode === 'dark' ? 'white' : '#232323' }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container>\r\n        <Grid item xs className={classes.smallIcon}>\r\n          <IconButton aria-label=\"swap\" onClick={handleClickExchange}>\r\n            <SwapVertIcon fontSize=\"medium\" />\r\n          </IconButton>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Asset2 */}\r\n      <Grid container className={classes.assets}>\r\n        <Grid item xs>\r\n          <MenuItem sx={{ typography: 'body2', py: 1, px: 2.5 }} onClick={handleClickOpenAsset2}>\r\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" flexGrow={1}>\r\n              <Box display=\"flex\" alignItems=\"center\">\r\n                <Box\r\n                  component=\"img\"\r\n                  src={`https://asa-list.tinyman.org/assets/${selectedAsset2TokenNumber}/icon.png`}\r\n                  alt=\"Asset logo\"\r\n                  sx={{\r\n                    mr: 2,\r\n                    width: 40,\r\n                    height: 40\r\n                  }}\r\n                />\r\n                <Box>\r\n                  <Box display=\"flex\" alignItems=\"center\" gap={1}>\r\n                    <Typography variant=\"subtitle1\" noWrap>\r\n                      {selectedAsset2TokenName}\r\n                    </Typography>\r\n                    <Tooltip title=\"Trusted asset by Pera\" arrow>\r\n                      <Box\r\n                        component=\"img\"\r\n                        src=\"/static/token/trust.svg\"\r\n                        alt=\"Asset logo\"\r\n                        sx={{\r\n                          width: 16,\r\n                          height: 16\r\n                        }}\r\n                      />\r\n                    </Tooltip>\r\n                  </Box>\r\n                  <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\r\n                    ${selectedAsset2TokenUnitName} - {selectedAsset2TokenNumber}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          </MenuItem>\r\n          <SelectTokenDialog\r\n            selectedAssetTokenName={selectedAsset2TokenName}\r\n            selectedAssetTokenNumber={selectedAsset2TokenNumber}\r\n            selectedAssetTokenUnitName={selectedAsset2TokenUnitName}\r\n            selectedAssetTokenDecimal={selectedAsset2TokenDecimal}\r\n            open={openAsset2}\r\n            onClose={asset2HandleClose}\r\n          />\r\n        </Grid>\r\n        <Grid item xs>\r\n          <input\r\n            type=\"number\"\r\n            pattern=\"[0-9]*\"\r\n            className={classes.assetInput}\r\n            placeholder=\"0.00\"\r\n            value={assetAmount2}\r\n            onChange={handleAsset2AmountChange}\r\n            style={{ color: themeMode === 'dark' ? 'white' : '#232323' }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container>\r\n        <Grid item xs className={classes.connectButton}>\r\n          {address && address.length > 0 ? (\r\n            <Button\r\n              onClick={handleSwap}\r\n              variant=\"contained\"\r\n              className=\"bto\"\r\n              sx={{\r\n                fontSize: { xs: '10px', md: '12px' },\r\n                fontFamily: 'Poppins',\r\n                width: { xs: '100%', md: '100%' },\r\n                fontWeight: 500,\r\n                borderRadius: '8px',\r\n                boxShadow: 'none',\r\n                background: themeMode === 'dark' ? 'white' : 'black',\r\n                color: themeMode === 'dark' ? 'black' : 'white',\r\n                padding: '8px 10px',\r\n                '&:hover': {\r\n                  background: themeMode === 'dark' ? 'white' : 'black',\r\n                  opacity: '80%'\r\n                }\r\n              }}\r\n            >\r\n              Swap\r\n            </Button>\r\n          ) : (\r\n            <Account\r\n              width=\"100%\"\r\n              setAccountAddress={setAccountAddress}\r\n              setPerawallet={setPerawallet}\r\n              pera={pera}\r\n              message={message}\r\n              address={props.address}\r\n              setAddress={props.setAddress}\r\n            />\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport interface SelectTokenDialogProps {\r\n  open: boolean;\r\n  selectedAssetTokenName: string;\r\n  selectedAssetTokenNumber: number;\r\n  selectedAssetTokenUnitName: string;\r\n  selectedAssetTokenDecimal: number;\r\n  onClose: (name: string, num: number, unit: string, decimal: number, swap: boolean) => void;\r\n}\r\n\r\nfunction SelectTokenDialog(props: SelectTokenDialogProps) {\r\n  const classes = useStyles();\r\n  const {\r\n    onClose,\r\n    selectedAssetTokenName,\r\n    selectedAssetTokenNumber,\r\n    selectedAssetTokenUnitName,\r\n    selectedAssetTokenDecimal,\r\n    open\r\n  } = props;\r\n  const [balanceList, setBalanceList] = useState<Array<{ params: any; tokenName: string; tokenNumber: number }>>([]);\r\n\r\n  const handleClose = () => {\r\n    onClose(\r\n      selectedAssetTokenName,\r\n      selectedAssetTokenNumber,\r\n      selectedAssetTokenUnitName,\r\n      selectedAssetTokenDecimal,\r\n      false\r\n    );\r\n  };\r\n\r\n  const handleListItemClick = (name: string, num: number, unit: string, decimal: number) => {\r\n    onClose(name, num, unit, decimal, false);\r\n  };\r\n\r\n  const handleAssets = async () => {\r\n    const newArr: any = await Promise.all(\r\n      tokenlist.map(async (item) => {\r\n        const assetInfo = await getAssetByID(item.tokenNumber);\r\n        return {\r\n          ...item,\r\n          params: assetInfo.asset.params\r\n        };\r\n      })\r\n    );\r\n    setBalanceList(newArr);\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleAssets();\r\n  }, []);\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"form-dialog-title\" open={open}>\r\n      <DialogTitle id=\"form-dialog-title\">Select an asset</DialogTitle>\r\n      <DialogContent>\r\n        <List>\r\n          {balanceList.map((item: any) => (\r\n            <MenuItem\r\n              key={item.tokenNumber}\r\n              sx={{ typography: 'body2', py: 1, px: 2.5 }}\r\n              onClick={() =>\r\n                handleListItemClick(item.params.name, item.tokenNumber, item.params['unit-name'], item.params.decimals)\r\n              }\r\n            >\r\n              <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" flexGrow={1}>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <Box\r\n                    component=\"img\"\r\n                    src={`https://asa-list.tinyman.org/assets/${item.tokenNumber}/icon.png`}\r\n                    alt=\"Asset logo\"\r\n                    sx={{\r\n                      mr: 2,\r\n                      width: 24,\r\n                      height: 24\r\n                    }}\r\n                  />\r\n                  <Box>\r\n                    <Box display=\"flex\" alignItems=\"center\" gap={1}>\r\n                      <Typography variant=\"subtitle1\" noWrap>\r\n                        {item.tokenNumber === 0 ? 'Algorand' : item.params.name}\r\n                      </Typography>\r\n                      <Tooltip title=\"Trusted asset by Pera\" arrow>\r\n                        <Box\r\n                          component=\"img\"\r\n                          src=\"/static/token/trust.svg\"\r\n                          alt=\"Asset logo\"\r\n                          sx={{\r\n                            width: 16,\r\n                            height: 16\r\n                          }}\r\n                        />\r\n                      </Tooltip>\r\n                    </Box>\r\n                    <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\r\n                      {item.tokenNumber === 0 ? 'ALGO' : item.params['unit-name']}\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n                <Box display=\"flex\" alignItems=\"flex-end\" justifyContent=\"center\" flexDirection=\"column\">\r\n                  <Typography variant=\"body2\" sx={{ color: 'text.secondary', ml: 10 }} noWrap>\r\n                    {item.tokenNumber}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            </MenuItem>\r\n          ))}\r\n        </List>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable prettier/prettier */\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport { red } from '@material-ui/core/colors';\r\nimport useSettings from '../hooks/useSettings';\r\nimport Swap from './Swap';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n    width: '450px',\r\n    marginBottom: 50\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%'\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)'\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500]\r\n  }\r\n}));\r\n\r\n\r\nexport default function CardSwap(props) {\r\n  const { themeMode } = useSettings();\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root} style={{ background: themeMode === 'dark' ? '#232323' : '#fff' }}>\r\n      <div className=\"widget_parent\">\r\n        <Swap pera={props.pera} address={props.address} setAddress={props.setAddress} />\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n","/* eslint-disable prettier/prettier */\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { Box, Grid, Container, Typography, Stack, Button } from '@material-ui/core';\r\nimport CardSwap from '../../CardSwap';\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n//   padding: theme.spacing(5, 0, 10)\r\n}));\r\n\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Swap(props) {\r\n  return (\r\n    <RootStyle>\r\n        <Container className='widget-heading' maxWidth=\"lg\" sx={{ position: 'relative', paddingTop: { xs: '130px', md: 15 } }}>\r\n            <Typography component=\"p\" variant=\"overline\" sx={{ textAlign: 'center', display: 'block', fontFamily: 'Montserrat !important', fontWeight: '600 !important', textTransform: 'capitalize !important', fontSize: { xs: '18px !important', md: '20px !important' }, lineHeight: { xs: '40px', md: '50px' } }}>\r\n              Cross-chain transfer\r\n            </Typography>\r\n            <Typography component=\"p\" sx={{ fontFamily: 'Poppins !important', fontWeight: '400 !important', fontSize: '12px !important', lineHeight: 2, color: '#AEB6BF', maxWidth: '400px !important', paddingBottom: '30px !important', padding: '10px 20px', textAlign: 'center', margin: '0 auto !important', paddingTop:{xs: '20px !important', md: '10px !important'} }}>\r\n            Swap your stablecoins from one network to another. You can use them later to tokenize assets.\r\n            </Typography>\r\n            <Grid spacing={10} justifyContent=\"center\" display='flex' alignItems=\"center\" alignContent='center'>\r\n                <CardSwap pera={props.pera} address={props.address} setAddress={props.setAddress} />\r\n            </Grid>\r\n        </Container>\r\n    </RootStyle>\r\n  );\r\n}\r\n","/* eslint-disable prettier/prettier */\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\n// components\r\nimport Page from '../components/Page';\r\nimport { Swap } from '../components/_external-pages/swap';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Page)({\r\n  height: '100%',\r\n  // backgroundImage: `url(\"/static/home/team-page-bg.png\")`,\r\n  backgroundPosition: 'right 30%',\r\n  backgroundRepeat: 'no-repeat no-repeat'\r\n});\r\n\r\nconst ContentStyle = styled('div')(() => ({\r\n  overflow: 'hidden',\r\n  position: 'relative'\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function SwapPage(props) {\r\n  return (\r\n    <RootStyle title=\"App | Backed Capital\" id=\"move_top\">\r\n      <ContentStyle>\r\n        <Swap pera={props.pera} address={props.address} setAddress={props.setAddress} />\r\n      </ContentStyle>\r\n    </RootStyle>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { forwardRef } from 'react';\r\n// material\r\nimport { Box } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst Page = forwardRef(({ children, title = '', ...other }, ref) => (\r\n  <Box ref={ref} {...other}>\r\n    <Helmet>\r\n      <title>{title}</title>\r\n    </Helmet>\r\n    {children}\r\n  </Box>\r\n));\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default Page;\r\n"],"sourceRoot":""}